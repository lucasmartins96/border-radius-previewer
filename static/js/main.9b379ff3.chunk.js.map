{"version":3,"sources":["components/Clipboard.jsx","components/Describe.jsx","components/Shape.jsx","redux/actions/index.js","components/Input.jsx","components/LeftSideInputs.jsx","components/RightSideInputs.jsx","components/Main.jsx","App.js","reportWebVitals.js","redux/reducers/borderRadiusReducer.js","redux/reducers/index.js","redux/store/index.js","index.js"],"names":["connect","borderRadiusReducer","topLeft","topRight","bottomLeft","bottomRight","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","copyCss","clipboardInput","document","getElementById","value","select","execCommand","id","className","type","name","onClick","Describe","style","CHANGE_SIDE_CORNER","Input","sideBorder","borderRadius","updateBorderRadius","onChange","target","dispatch","side","payload","changeSideBorder","defaultProps","LeftSideInputs","RightSideInputs","Main","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","state","rootReducers","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode"],"mappings":"oPAkCA,IASeA,eATS,SAAC,GAAD,QACtBC,oBAAuBC,EADD,EACCA,QAASC,EADV,EACUA,SAAUC,EADpB,EACoBA,WAAYC,EADhC,EACgCA,YADhC,MAEjB,CACLC,oBAAoB,GAAD,OAAKJ,EAAL,MACnBK,qBAAqB,GAAD,OAAKJ,EAAL,MACpBK,uBAAuB,GAAD,OAAKJ,EAAL,MACtBK,wBAAwB,GAAD,OAAKJ,EAAL,SAGVL,EAvCf,YAKI,IAJFM,EAIC,EAJDA,oBACAC,EAGC,EAHDA,qBACAC,EAEC,EAFDA,uBACAC,EACC,EADDA,wBAOA,SAASC,IACP,IAAMC,EAAiBC,SAASC,eAAe,kBALxBD,SAASC,eAAe,kBAChCC,MAAf,yBAAyCR,EAAzC,YAAgEC,EAAhE,YAAwFE,EAAxF,YAAmHD,EAAnH,KAMAG,EAAeI,SACfH,SAASI,YAAY,QAGvB,OACE,qBAAKC,GAAG,YAAR,SACE,sBAAKC,UAAU,sBAAsBD,GAAG,sBAAxC,UACE,uBAAOE,KAAK,OAAOC,KAAK,iBAAiBH,GAAG,mBAC5C,wBAAQE,KAAK,SAASF,GAAG,UAAUI,QAAS,kBAAMX,KAAlD,wCCbOY,MAXf,WACE,OACE,yBAAQJ,UAAU,sBAAsBD,GAAG,WAA3C,UACE,yDACA,+GACA,sMACA,yHCeN,IASejB,eATS,SAAC,GAAD,QACtBC,oBAAuBC,EADD,EACCA,QAASC,EADV,EACUA,SAAUC,EADpB,EACoBA,WAAYC,EADhC,EACgCA,YADhC,MAEjB,CACLC,oBAAoB,GAAD,OAAKJ,EAAL,MACnBK,qBAAqB,GAAD,OAAKJ,EAAL,MACpBK,uBAAuB,GAAD,OAAKJ,EAAL,MACtBK,wBAAwB,GAAD,OAAKJ,EAAL,SAGVL,EA5Bf,YAKI,IAJFM,EAIC,EAJDA,oBACAC,EAGC,EAHDA,qBACAC,EAEC,EAFDA,uBACAC,EACC,EADDA,wBAEA,OACE,wBACEQ,GAAG,QACHM,MAAO,CACLjB,sBACAC,uBACAC,yBACAC,gCCjBKe,EAAqB,qBCKlC,SAASC,EAAT,GAAkE,IAAjDC,EAAgD,EAAhDA,WAAYC,EAAoC,EAApCA,aAAcC,EAAsB,EAAtBA,mBACzC,OACE,uBACET,KAAK,OACLC,KAAMM,EACNZ,MAAOa,EAAaD,GACpBG,SAAU,oBAAGC,OAAUV,EAAb,EAAaA,KAAMN,EAAnB,EAAmBA,MAAnB,OACRc,EAAmBR,EAAMN,MAMjC,IAQed,eARS,SAAC,GAAD,MAA8B,CACpD2B,aADsB,EAAG1B,wBAIA,SAAC8B,GAAD,MAAe,CACxCH,mBAAoB,SAACI,EAAMlB,GAAP,OAAiBiB,EDrBxB,SAA0BC,EAAMlB,GAC7C,MAAO,CACLK,KAAMK,EACNS,QAAS,CACPD,OACAlB,UCgB0CoB,CAAiBF,EAAMlB,QAGxDd,CAA6CyB,GAQ5DA,EAAMU,aAAe,CACnBT,WAAY,iBCvBCU,MATf,WACE,OACE,sBAAKlB,UAAU,cAAcD,GAAG,cAAhC,UACE,cAAC,EAAD,CAAOS,WAAW,YAClB,cAAC,EAAD,CAAOA,WAAW,mBCKTW,MATf,WACE,OACE,sBAAKnB,UAAU,cAAcD,GAAG,eAAhC,UACE,cAAC,EAAD,CAAOS,WAAW,aAClB,cAAC,EAAD,CAAOA,WAAW,oBCiBTY,MAjBf,WACE,OACE,uBAAMpB,UAAU,YAAhB,UACE,cAAC,EAAD,IACA,0BAASD,GAAG,UAAUC,UAAU,sBAAhC,UACE,sBAAKD,GAAG,kBAAR,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,OAEF,cAAC,EAAD,W,MCTOsB,MAJf,WACE,OAAO,cAAC,EAAD,KCOMC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,qCCLRQ,EAAe,CACnB/C,QAAS,IACTC,SAAU,IACVC,WAAY,IACZC,YAAa,KAYAJ,MATf,WAAuE,IAA1CiD,EAAyC,uDAAjCD,EAAiC,yCAAjB9B,EAAiB,EAAjBA,KAAMc,EAAW,EAAXA,QACzD,OAAQd,GACN,KAAKK,EACH,OAAO,2BAAK0B,GAAZ,kBAAoBjB,EAAQD,KAAOC,EAAQnB,QAC7C,QACE,OAAOoC,ICPEC,EAJMC,0BAAgB,CACnCnD,wBCKaoD,EAJDC,sBAAYH,EAAcI,8BACtCC,0BAAgBC,OCElBC,IAASC,OACP,cAAC,IAAD,CAAUN,MAAOA,EAAjB,SACE,cAAC,IAAMO,WAAP,UACE,cAAC,EAAD,QAGJhD,SAASC,eAAe,SAM1B2B,M","file":"static/js/main.9b379ff3.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nfunction Clipboard({\n  borderTopLeftRadius,\n  borderTopRightRadius,\n  borderBottomLeftRadius,\n  borderBottomRightRadius,\n}) {\n  function updateClipboardInput() {\n    const clipboardInput = document.getElementById('clipboardInput');\n    clipboardInput.value = `border-radius: ${borderTopLeftRadius} ${borderTopRightRadius} ${borderBottomRightRadius} ${borderBottomLeftRadius};`;\n  }\n\n  function copyCss() {\n    const clipboardInput = document.getElementById('clipboardInput');\n    updateClipboardInput();\n    clipboardInput.select();\n    document.execCommand('copy');\n  }\n\n  return (\n    <div id=\"Clipboard\">\n      <div className=\"component-container\" id=\"clipboard-container\">\n        <input type=\"text\" name=\"clipboardInput\" id=\"clipboardInput\" />\n        <button type=\"button\" id=\"copyCSS\" onClick={() => copyCss()}>\n          Gerar e Copiar CSS\n        </button>\n      </div>\n    </div>\n  );\n}\n\nconst mapStateToProps = ({\n  borderRadiusReducer: { topLeft, topRight, bottomLeft, bottomRight },\n}) => ({\n  borderTopLeftRadius: `${topLeft}px`,\n  borderTopRightRadius: `${topRight}px`,\n  borderBottomLeftRadius: `${bottomLeft}px`,\n  borderBottomRightRadius: `${bottomRight}px`,\n});\n\nexport default connect(mapStateToProps)(Clipboard);\n\nClipboard.propTypes = {\n  borderTopLeftRadius: PropTypes.string.isRequired,\n  borderTopRightRadius: PropTypes.string.isRequired,\n  borderBottomLeftRadius: PropTypes.string.isRequired,\n  borderBottomRightRadius: PropTypes.string.isRequired,\n};\n","import React from 'react'\n\nfunction Describe() {\n  return (\n    <header className=\"component-container\" id=\"Describe\">\n      <h1>Border Radius Previewer</h1>\n      <p>A propriedade border-radius permite inserir cantos arredondados aos elementos!</p>\n      <p>Experimente alterar os valores nos inputs em cada canto para modificar a propriedade na forma ao centro e visualize como elemento ficaria com a propriedade aplicada.</p>\n      <p>Ao clicar no botão, gere a propriedade CSS da forma e copie para o seu código.</p>\n    </header>\n  )\n}\n\nexport default Describe;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nfunction Shape({\n  borderTopLeftRadius,\n  borderTopRightRadius,\n  borderBottomLeftRadius,\n  borderBottomRightRadius,\n}) {\n  return (\n    <canvas\n      id=\"shape\"\n      style={{\n        borderTopLeftRadius,\n        borderTopRightRadius,\n        borderBottomLeftRadius,\n        borderBottomRightRadius,\n      }}\n    />\n  );\n}\n\nconst mapStateToProps = ({\n  borderRadiusReducer: { topLeft, topRight, bottomLeft, bottomRight },\n}) => ({\n  borderTopLeftRadius: `${topLeft}px`,\n  borderTopRightRadius: `${topRight}px`,\n  borderBottomLeftRadius: `${bottomLeft}px`,\n  borderBottomRightRadius: `${bottomRight}px`,\n});\n\nexport default connect(mapStateToProps)(Shape);\n\nShape.propTypes = {\n  borderTopLeftRadius: PropTypes.string.isRequired,\n  borderTopRightRadius: PropTypes.string.isRequired,\n  borderBottomLeftRadius: PropTypes.string.isRequired,\n  borderBottomRightRadius: PropTypes.string.isRequired,\n};\n","export const CHANGE_SIDE_CORNER = 'CHANGE_SIDE_CORNER';\n\nexport default function changeSideBorder(side, value) {\n  return {\n    type: CHANGE_SIDE_CORNER,\n    payload: {\n      side,\n      value,\n    },\n  };\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport changeSideBorder from '../redux/actions';\n\nfunction Input({ sideBorder, borderRadius, updateBorderRadius }) {\n  return (\n    <input\n      type=\"text\"\n      name={sideBorder}\n      value={borderRadius[sideBorder]}\n      onChange={({ target: { name, value } }) =>\n        updateBorderRadius(name, value)\n      }\n    />\n  );\n}\n\nconst mapStateToProps = ({ borderRadiusReducer }) => ({\n  borderRadius: borderRadiusReducer,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  updateBorderRadius: (side, value) => dispatch(changeSideBorder(side, value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Input);\n\nInput.propTypes = {\n  sideBorder: PropTypes.string,\n  borderRadius: PropTypes.objectOf(PropTypes.string).isRequired,\n  updateBorderRadius: PropTypes.func.isRequired,\n};\n\nInput.defaultProps = {\n  sideBorder: 'whatever side',\n};\n","import React from 'react';\nimport Input from './Input';\n\nfunction LeftSideInputs() {\n  return (\n    <div className=\"side-inputs\" id=\"left-inputs\">\n      <Input sideBorder=\"topLeft\" />\n      <Input sideBorder=\"bottomLeft\" />\n    </div>\n  );\n}\n\nexport default LeftSideInputs;\n","import React from 'react';\nimport Input from './Input';\n\nfunction RightSideInputs() {\n  return (\n    <div className=\"side-inputs\" id=\"right-inputs\">\n      <Input sideBorder=\"topRight\" />\n      <Input sideBorder=\"bottomRight\" />\n    </div>\n  );\n}\n\nexport default RightSideInputs;\n","import React from 'react';\nimport Clipboard from './Clipboard';\nimport Describe from './Describe';\nimport Shape from './Shape';\nimport LeftSideInputs from './LeftSideInputs';\nimport RightSideInputs from './RightSideInputs';\n\nfunction Main() {\n  return (\n    <main className=\"container\">\n      <Describe />\n      <section id=\"content\" className=\"component-container\">\n        <div id=\"shape-container\">\n          <LeftSideInputs />\n          <Shape />\n          <RightSideInputs />\n        </div>\n        <Clipboard />\n      </section>\n      \n    </main>\n  );\n}\n\nexport default Main;\n","import React from 'react';\nimport Main from './components/Main';\nimport './style.css';\n\nfunction App() {\n  return <Main />;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { CHANGE_SIDE_CORNER } from \"../actions\";\n\nconst initialState = {\n  topLeft: \"0\",\n  topRight: \"0\",\n  bottomLeft: \"0\",\n  bottomRight: \"0\",\n};\n\nfunction borderRadiusReducer(state = initialState, { type, payload }) {\n  switch (type) {\n    case CHANGE_SIDE_CORNER:\n      return { ...state, [payload.side]: payload.value };\n    default:\n      return state;\n  }\n}\n\nexport default borderRadiusReducer;\n","import { combineReducers } from 'redux';\nimport borderRadiusReducer from './borderRadiusReducer';\n\nconst rootReducers = combineReducers({\n  borderRadiusReducer,\n});\n\nexport default rootReducers;\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducers from '../reducers';\n\nconst store = createStore(rootReducers, composeWithDevTools(\n  applyMiddleware(thunk),\n));\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './redux/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}